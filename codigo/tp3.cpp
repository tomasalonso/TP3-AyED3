#include <iostream>
#include <sstream>
#include <string>

using namespace std;

#include "Equipo.hpp"
#include "Tablero.hpp"
#include "extras.hpp"


const vector<double> gI({
// crossover RANDOM
// -0.589364, 0.652226, -0.507876, 0.388526, -0.344394, -0.203026, 0.493318, 0.505395, 0.986491, -0.0153749, -0.214718, -0.295698, -0.882941, 0.206117, 0.0142715, 0.810046, 0.0971497, -0.371663, 0.664317, -0.0883049, -0.757279, -0.799241, -0.26386, 0.710006, 0.599131, -0.223488, -0.319659, 0.203676, 0.922115, 0.660334

// sel por cantidad
 // -0.969611, 0.138495, 0.520892, -0.831044, 0.643832, 0.0824753, 0.343504, 0.564799, -0.235849, 0.558214, -0.489998, 0.462729, -0.83145, -0.24105, -0.021706, 0.800658, -0.209126, -0.628536, -0.00329708, -0.917462, 0.974276, -0.22102, -0.997474, 0.79103, -0.588534, -0.097393, -0.372594, -0.399311, 0.408893, 0.532588, 0.451781


// fitness puntaje
 -0.0912428, 0.441283, 0.526057, -0.24552, -0.495963, -0.44873, -0.994717, -0.158943, 0.652438, 0.664869, 0.230037, 0.374349, -0.995683, 0.800342, -0.515715, 0.741213, 0.356681, 0.0936855, -0.615283, -0.43112, 0.101387, 0.222677, -0.500011, 0.0475549, -0.874837, 0.190928, -0.818234, 0.50323, 0.514024, 0.230156

});
const vector<double> gD({

// crossover BLOQUES
// 0.0637883, -0.61614, 0.649995, -0.220379, -0.635748, -0.697865, 0.16051, 0.293574, -0.406392, 0.838909, 0.18956, -0.46366, 0.703988, -0.998117, -0.0996017, -0.200106, 0.971754, -0.388111, 0.663797, 0.469709, -0.0635755, 0.700699, -0.953205, 0.758123, 0.600004, 0.698239, 0.315688, 0.843778, 0.411682, 0.368018

// sel por puntaje
// -0.911725, -0.657043, 0.0724201, 0.376747, -0.712885, -0.667457, 0.449107, -0.15078, -0.190865, -0.31724, -0.177825, -0.497729, -0.381509, 0.697426, 0.140018, 0.515047, 0.126896, -0.0792394, 0.896953, -0.0756392, 0.158459, -0.160506, -0.0701599, -0.675948, 0.512197, 0.11177, 0.072568, -0.327908, 0.829658, 0.293612, 0.909104

//  fitness dif_goles
0.0354922, -0.347757, -0.00128968, -0.454219, -0.352621, -0.698883, -0.959573, -0.730346, -0.451026, -0.855564, -0.898217, 0.594382, -0.377874, -0.126251, -0.297974, 0.196175, 0.964436, -0.592206, -0.578612, 0.277421, -0.015946, -0.471911, -0.019213, -0.182925, -0.847654, -0.218569, 0.730436, 0.622654, 0.912127, 0.818418

});


int main() {
    const int m = 5;
    const int n = 10;
    const unsigned int total = 70;
    // const unsigned int total = 100;

    const vector<Jugador> jI({
                              Jugador(0, Posicion(4,2), gI[prob0]),
                              Jugador(1, Posicion(1,1), gI[prob1]),
                              Jugador(2, Posicion(1,3), gI[prob2])
        });
    const vector<Jugador> jD({
                              Jugador(0, Posicion(5,2), gD[prob0]),
                              Jugador(1, Posicion(8,1), gD[prob1]),
                              Jugador(2, Posicion(8,3), gD[prob2])
        });

    Equipo equipoI(gI, false);
    Equipo equipoD(gD, true);

    Tablero tablero(m, n, total, jI, jD);

    cout << tablero << endl;

    while (!tablero.terminado()) {
        tablero.actualizar(
                           equipoI.turno(tablero),
                           equipoD.turno(tablero)
                           );

        cout << tablero;

        std::string line;
        std::getline(std::cin, line);
    }

    return 0;
}
